# GitHub Actions workflow for witzbeck/workbench
#
# This workflow sets up a Python environment using the uv package/venv manager,
# installs the project along with all development and optional dependencies,
# runs the repository's pytest test suite, and then validates the Dagster
# definitions using the `dg` CLI.
#
# The workflow triggers on any push or pull request targeting the `main` branch.

name: Test and Validate

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.12'
          enable-cache: true

      - name: Install project dependencies
        run: uv sync --dev --all-extras

      - name: Create DuckDB database if not exists
        run: |
          mkdir -p data
          uv run python -c "import duckdb; conn = duckdb.connect('data/workbench.db'); conn.close()"

      # Create a minimal dbt profile pointing at data/workbench.db.
      # Note: dbt expects the profile in ~/.dbt/profiles.yml by default.
      - name: Set up dbt profile
        run: |
          mkdir -p ~/.dbt
          cat <<YAML > ~/.dbt/profiles.yml
          workbench:
            target: dev
            outputs:
              dev:
                type: duckdb
                path: 'data/workbench.db'
          YAML

      # Generate target/manifest.json by compiling the dbt project.
      - name: Compile dbt project
        run: uv run dbt compile --profiles-dir ~/.dbt

      - name: Run pytest
        run: uv run pytest workbench_tests

      - name: Validate Dagster definitions
        run: uv run dg check defs
